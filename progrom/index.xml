<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Progroms on zoco</title>
    <link>http://yezuozuo.github.io/progrom/</link>
    <description>Recent content in Progroms on zoco</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 15 Dec 2018 15:47:21 +0800</lastBuildDate>
    
	<atom:link href="http://yezuozuo.github.io/progrom/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>高级语言的数据结构</title>
      <link>http://yezuozuo.github.io/progrom/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Sat, 15 Dec 2018 15:47:21 +0800</pubDate>
      
      <guid>http://yezuozuo.github.io/progrom/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>PHP的最大优势便是他的数据结构和内置函数, 具体地说便是字符串和数组, 以及字符串和数组的函数. PHP的字符串既能表示一般文本, 也能表示任意二进制数据, 也就是说, PHP的字符串就是一段内存. PHP的的字符串操作函数囊括了大部分常见和不常见的文本操作: 截取, 查找, 正则, 字符集编码转换…每一个都是一把利器. PHP的数组是整合了列表和哈希表的数据结构. 由于”树”是最能描述现实世界的数据结构, 而PHP的数组可以(轻松地)表示任意树, 所以, PHP的数组也最能描述现实世界(建模). 如果要用一句话来描述PHP的优势, 我会用这一句:”PHP语言的数据结构和内置函数, 可以几乎直接地描述和处理实际业务. PHP是计算机与现实业务的最直接胶合剂.”
说到底我们用计算机语言的目的是为了将现实世界翻译成计算机能懂的语言，将两个世界之间建立联系的方式越简单，他的生命力就越长久。
数组 &amp;amp; HASHTABLE PHP Go JAVA </description>
    </item>
    
  </channel>
</rss>